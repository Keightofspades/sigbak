.\" Copyright (c) 2019 Tim van der Molen <tim@kariliq.nl>
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd November 20, 2022
.Dt SIGBAK 1
.Os
.Sh NAME
.Nm sigbak
.Nd read encrypted Signal backups
.Sh SYNOPSIS
.Nm sigbak
.Ar command
.Op Ar argument ...
.Sh DESCRIPTION
.Nm
is a utility to read the encrypted backups created by the Signal messaging app.
It can be used to extract messages, attachments and other data.
.Pp
A Signal backup consists primarily of an SQLite database.
This database contains the backed-up messages, amongst other things.
Attachments, avatars and stickers, however, are stored as separate files in the
backup.
.Pp
Every Signal backup is encrypted with a 30-digit passphrase.
By default,
.Nm
prompts for the passphrase.
Alternatively, the
.Fl p
option may be used to specify a file that contains the passphrase.
Whitespace in the passphrase is ignored.
.Pp
The commands are as follows:
.Bl -tag -width Ds
.Tg att
.It Xo
.Ic export-attachments
.Oo Fl p Ar passfile Oc
.Oo Fl t Ar thread Oc
.Ar backup Op Ar directory
.Xc
.D1 Pq Alias: Ic att
.Pp
Export all attachments in the file
.Ar backup
to
.Ar directory ,
or to the current directory if
.Ar directory
is not specified.
.Pp
By default, all attachments are exported.
The
.Fl t
option may be used to export only the attachments from a single conversation
thread.
The
.Ar thread
argument should be a number.
The
.Ic list-conversations
command can be used to view a list of conversation threads.
.Tg avt
.It Ic export-avatars Oo Fl p Ar passfile Oc Ar backup Op Ar directory
.D1 Pq Alias: Ic avt
.Pp
Export all avatars in the file
.Ar backup
to
.Ar directory ,
or to the current directory if
.Ar directory
is not specified.
.Tg check
.It Ic check-backup Oo Fl p Ar passfile Oc Ar backup
.D1 Pq Alias: Ic check
.Pp
Check that the file
.Ar backup
can be decrypted and parsed correctly.
The check is aborted after the first encountered error.
.Tg dump
.It Ic dump-backup Oo Fl p Ar passfile Oc Ar backup
.D1 Pq Alias: Ic dump
.Pp
Print the raw contents of the file
.Ar backup
in a readable format on standard output.
.Tg msg
.It Xo
.Ic export-messages
.Oo Fl f Ar format Oc
.Oo Fl p Ar passfile Oc
.Oo Fl t Ar thread Oc
.Ar backup Ar dest
.Xc
.D1 Pq Alias: Ic msg
.Pp
Export all messages in the file
.Ar backup
to
.Ar dest .
.Pp
The
.Fl f
option may be used to specify the output format.
Supported values are
.Cm csv ,
.Cm maildir
and
.Cm text
(the default).
.Pp
With the
.Cm csv
format,
messages are written in CSV (comma-separated values) format to the file
.Ar dest .
If
.Ar dest
is omitted, messages are written to standard output instead.
See the
.Sx CSV FORMAT
section below for details.
.Pp
With the
.Cm maildir
format, messages are written as emails in maildir format to the directory
.Ar dest .
As a precaution,
.Nm
will refuse to write to an existing maildir.
.Pp
With the
.Cm text
format, messages are written as plain text to the file
.Ar dest .
If
.Ar dest
is omitted, messages are written to standard output instead.
.Pp
By default, all messages are exported.
The
.Fl t
option may be used to export only the messages from a single conversation
thread.
The
.Ar thread
argument should be a number.
The
.Ic list-conversations
command can be used to view a list of conversation threads.
.Tg db
.It Ic export-database Oo Fl p Ar passfile Oc Ar backup Ar database
.D1 Pq Alias: Ic db
.Pp
Export the SQLite database in the file
.Ar backup
to the file
.Ar database .
.Tg stk
.It Ic export-stickers Oo Fl p Ar passfile Oc Ar backup Op Ar directory
.D1 Pq Alias: Ic stk
.Pp
Export all stickers in the file
.Ar backup
to
.Ar directory ,
or to the current directory if
.Ar directory
is not specified.
.Tg lsc
.It Ic list-conversations Oo Fl p Ar passfile Oc Ar backup
.D1 Pq Alias: Ic lsc
.Pp
Print a list of all conversation threads.
.El
.Sh CSV FORMAT
The
.Ic export-messages
command can export messages in CSV format.
In this format, each record describes either a message or a message reaction,
and consists of the following eight fields.
.Pp
The
.Em first
field is an integer specifying the time a message or reaction was sent.
For incoming messages, the
.Em second
field is an integer specifying the time a message or reaction was received.
The times in these two fields are specified in Unix time, with millisecond
precision.
.Pp
The
.Em third
field is an integer specifying the thread id.
.Pp
The
.Em fourth
field is an integer specifying the message type.
A value of 0 indicates an incoming message, 1 indicates an outgoing message,
and 2 indicates a reaction.
Reaction records always immediately follow after the record of the message they
are reactions to.
.Pp
The
.Em fifth
field is an integer specifying the number of attachments a message has.
For reactions, this field is 0.
.Pp
The
.Em sixth
field is a string containing the phone number of the sender or recipient.
For outgoing messages sent to a group, this field is the string
.Sq group .
.Pp
The
.Em seventh
field is a string containing the name of the sender, recipient or group.
.Pp
The
.Em eighth
field is a string containing the message text or reaction emoji.
.Sh EXIT STATUS
.Ex -std
.Sh EXAMPLES
Export all messages in the file
.Pa signal.backup
to the file
.Pa messages.txt :
.Pp
.Dl $ sigbak export-messages signal.backup messages.txt
.Pp
First create a passphrase file, then export all messages as plain text, fold
long lines for readability and view the result:
.Bd -literal -offset indent
$ echo 01234 56789 01234 56789 01234 56789 > passfile
$ sigbak export-messages -p passfile signal.backup | fold -s | less
.Ed
.Pp
Export all messages and attachments from the conversation with Charlie:
.Bd -literal -offset indent
$ sigbak list-conversations signal.backup
[...]
   1: Alice
   2: Bob
   3: Charlie
$ sigbak export-messages -t 3 signal.backup charlie.txt
$ sigbak export-attachments -t 3 signal.backup
.Ed
.Pp
Export the SQLite database and use
.Xr sqlite3 1
to view the contents of the
.Sq sms
table:
.Bd -literal -offset indent
$ sigbak export-database signal.backup signal.db
$ sqlite3 signal.db 'select * from sms' | less
.Ed
.Sh SEE ALSO
.Lk https://www.kariliq.nl/sigbak/ ,
.Lk https://www.signal.org/
.Sh AUTHORS
The
.Nm
utility was written by
.An Tim van der Molen Aq Mt tim@kariliq.nl .
